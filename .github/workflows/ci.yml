name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Cache Playwright browsers
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: playwright-${{ hashFiles('package-lock.json') }}-${{ matrix.node-version }}
        restore-keys: |
          playwright-${{ hashFiles('package-lock.json') }}-
          playwright-

    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium

    - name: Run tests
      run: npm test

    - name: Run build
      run: npm run build

  scrape:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Cache Playwright browsers
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: playwright-${{ hashFiles('package-lock.json') }}-20
        restore-keys: |
          playwright-${{ hashFiles('package-lock.json') }}-
          playwright-

    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium

    - name: Build package
      run: npm run build

    - name: Scrape TSE data
      run: npm run scrape -- -o tse-data.json -p

    - name: Upload TSE data
      uses: actions/upload-artifact@v4
      with:
        name: tse-data
        path: tse-data.json
        retention-days: 30

    - name: Comment PR with data summary
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const data = JSON.parse(fs.readFileSync('tse-data.json', 'utf8'));
          const count = Object.keys(data).length;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `ðŸ“Š TSE Data Scraping Results:\n- Total entries: ${count}\n- Data file: [tse-data.json](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`
          });